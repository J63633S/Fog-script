local function getGitSoundId(GithubSoundPath: string, AssetName: string): Sound
    local Url = GithubSoundPath

    if not isfile(AssetName..".mp3") then 
        writefile(AssetName..".mp3", game:HttpGet(Url)) 
    end

    local Sound = Instance.new("Sound")
    Sound.SoundId = getcustomasset(AssetName..".mp3", true)
    return Sound 
end

local CustomMusic = getGitSoundId("https://raw.githubusercontent.com/J63633S/Fog-script/refs/heads/main/ambient%20that%20doesn't%20work%20FOR%20GODS%20SAKE.mp3", "ambience")
CustomMusic.Parent = game.SoundService
CustomMusic.Looped = true
CustomMusic:Play()

game.SoundService.AmbientReverb = Enum.ReverbType.Cave

-- new fog
local Lighting = game:GetService("Lighting")
Lighting.Ambient = Color3.new(0, 0, 0)
Lighting.Brightness = 0.1

require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game).caption("Credits to Chrono for the fog.",true)

sync = loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAcceleration/Comet-Development/refs/heads/main/Doors/Utility/SyncHelper.lua"))()
local latest room = game.ReplicatedStorage.GameData.LatestRoom
local NumbSP = {12} -- table with numbers of rooms when entity should spawn

-- you should past it at first strokes of code and not change it

for i = 12 , 95 , sync:generateFullRandom(6,8,seed) do
  table.insert(NumbSP,sync:generateFullRandom(i - 3,i + 7,seed + i)) -- NUMBSP is name of table with numbers
end

lastroom.changed:connect(function() -- function that start when room opened
    if table.find(NumbSP, lastroom.Value) then -- check if door opened room number in table spawns entity
      task.spawn(function()
               -- entity code past here
      end)
  end
end

-- Display a warning message in the game to show this script is running
warn("Good luck")

-- Get important references from the game:
-- ReplicatedStorage is a service that stores data shared between server and client
-- GameData is a Folder inside ReplicatedStorage that contains game information
local GameData: Folder = game.ReplicatedStorage:WaitForChild("GameData")

-- Get a specific value from GameData that tracks which room the player is in
-- NumberValue is a type that holds a number that can change during gameplay
local LatestRoom: NumberValue = GameData:WaitForChild("LatestRoom")

-- Create a boolean (true/false) variable to ensure fog is only set once
-- This prevents the fog from being repeatedly reset
local FogOnce = false

-- Watch for changes to the LatestRoom value
-- The :Connect() function runs the code inside whenever LatestRoom changes
-- The 'function(LatestRoom)' part defines what happens when a change occurs
LatestRoom.Changed:Connect(function(LatestRoom)
    -- If fog has already been set once, exit the function and do nothing
    if FogOnce then
        return
    end

    -- Set FogOnce to true to prevent this code from running again
    FogOnce = true

    -- Modify the game's lighting/fog settings:
    -- FogEnd determines how far away the fog completely blocks vision (100 studs)
    game.Lighting.FogEnd = 78
    -- FogStart determines where the fog begins to appear (10 studs)
    game.Lighting.FogStart = 10
    
    -- Print a message to confirm the fog settings were successfully changed
    print("success")
end)
