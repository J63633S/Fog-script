local sound = Instance.new("Sound")

sound.SoundId = "rbxassetid://5232223867"

sound.Volume = 7.99394

sound.Looped = true

sound.Pitch = 0.600349

sound:Play()

sound.Parent = workspace

-- new fog
local Lighting = game:GetService("Lighting")
Lighting.Ambient = Color3.new(0, 0, 0)
Lighting.Brightness = 0.1

require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game).caption("Credits to Chrono for the fog.",true)

-- Display a warning message in the game to show this script is running
warn("Good luck")

-- Get important references from the game:
-- ReplicatedStorage is a service that stores data shared between server and client
-- GameData is a Folder inside ReplicatedStorage that contains game information
local GameData: Folder = game.ReplicatedStorage:WaitForChild("GameData")

-- Get a specific value from GameData that tracks which room the player is in
-- NumberValue is a type that holds a number that can change during gameplay
local LatestRoom: NumberValue = GameData:WaitForChild("LatestRoom")

-- Create a boolean (true/false) variable to ensure fog is only set once
-- This prevents the fog from being repeatedly reset
local FogOnce = false

-- Watch for changes to the LatestRoom value
-- The :Connect() function runs the code inside whenever LatestRoom changes
-- The 'function(LatestRoom)' part defines what happens when a change occurs
LatestRoom.Changed:Connect(function(LatestRoom)
    -- If fog has already been set once, exit the function and do nothing
    if FogOnce then
        return
    end

    -- Set FogOnce to true to prevent this code from running again
    FogOnce = true

    -- Modify the game's lighting/fog settings:
    -- FogEnd determines how far away the fog completely blocks vision (100 studs)
    game.Lighting.FogEnd = 78
    -- FogStart determines where the fog begins to appear (10 studs)
    game.Lighting.FogStart = 10
    
    -- Print a message to confirm the fog settings were successfully changed
    print("success")
end)
